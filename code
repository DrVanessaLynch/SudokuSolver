import numpy as np
import time 

# Lets keep track of how fast the sudoku solver is
start = time.time()

# Function to generate possible values of each box: 1 to size of sudoku (dim)
def setup(dim):
    nn = n * n
    valueoptions = list(range(1,n+1))
    a = set(valueoptions)
    mtx = np.array(a).repeat(nn).reshape(n,n)
    print(mtx)
    return(mtx);

# Function to input the known grid values
def knownval(sudoku):
    return;  #Finish later

# Input the dimensions of the sudoku 
dim = input("Enter the value of the exterior dimension of the symmetric sudoku you wish to solve :: ")
dim = int(dim)  #converts to an integer

# Determine the dimensions of the subquadrants
# For a 4x4 sudoku, the subquadrants would be 2x2
subq = np.sqrt(dim) # Takes a square root
subq = int(subq)    # Converts it to an integer
print("Values of this sudoku range from 1 to ", dim, " with ", subq, " x ", subq, " subquadrants making up the board")

# Total squares on the board
squares = dim * dim 

# Make a set with all possible values for the squares
posval = list(range(1, dim + 1))
values = set(pv)
